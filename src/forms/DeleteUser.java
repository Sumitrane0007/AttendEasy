/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import dao.ConnectionProvider;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.table.DefaultTableModel;
import utility.AEUtility;
import java.sql.*;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;


/**
 *
 * @author sumit
 */
public class DeleteUser extends javax.swing.JFrame {


    /**
     * Creates new form DeleteUser
     */
    public DeleteUser() {
        initComponents();
        AEUtility.setImage(this,"images/abc1.jpg",1087,503);
        this.getRootPane().setBorder(BorderFactory.createMatteBorder(4,4,4,4,Color.BLACK));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1087, 491));
        setMinimumSize(new java.awt.Dimension(1087, 491));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Delete User");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Search");

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        userTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        userTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 508, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(370, 370, 370)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        fetchUser(null);
    }//GEN-LAST:event_formComponentShown

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String searchText = txtSearch.getText();
        if(Objects.isNull(searchText) || searchText.isEmpty()){
            fetchUser(null); //show all the list of users when searchbar is empty
        }
        else{
            fetchUser(searchText);
        }
        
    }//GEN-LAST:event_txtSearchKeyReleased

    private void userTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTable1MouseClicked
        // TODO add your handling code here:
        try{
            int dialogResult = JOptionPane.showConfirmDialog(null," *User details\n* Images\n* OR codes\n* Attendance\n\nAssociated with this user will be deleted. \n Are you sure you want to proceed?", "Confirmation",JOptionPane.YES_NO_OPTION);
            
            if(dialogResult == JOptionPane.YES_OPTION){
                int index = userTable1.getSelectedRow();
                TableModel model = userTable1.getModel();
                String email = model.getValueAt(index,3).toString();
                String imagePath = AEUtility.getPath("/images" + File.separator + email + ".jpg");
                deleteFile(imagePath);
                imagePath = AEUtility.getPath("/qrCodes" + File.separator + email + ".jpg" );
                deleteFile(imagePath);
                
                Connection connection = ConnectionProvider.getCon();
                String attendanceDeleteQuery = "DELETE userattendance, userdetails from userdetails LEFT JOIN userattendance ON userattendance.userid=userdetails.id where userdetails.email=?";
                
                PreparedStatement preparedStatement = connection.prepareStatement(attendanceDeleteQuery);
                preparedStatement.setString(1,email);
                preparedStatement.executeUpdate();
                fetchUser(null);
                JOptionPane.showMessageDialog(null,"User Deleted Successfully","Confirmation",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null,"Deletion Canceled.","Confirmation",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Something went wrong","Error",JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_userTable1MouseClicked

    private void fetchUser(String searchText) throws HeadlessException{
        DefaultTableModel model = (DefaultTableModel) userTable1.getModel();
        model.setRowCount(0);
        
        try{
            Connection con = ConnectionProvider.getCon();
            Statement statement = con.createStatement();
            String query = null;
            if(Objects.isNull(searchText)){
                query = "select * from userdetails";
            }
            else{
                query="select * from userdetails where name like '%"+ searchText +"%' or email like '%"+ searchText +"%'";
                
            }
            ResultSet resultSet = statement.executeQuery(query);
            while(resultSet.next()){
                model.addRow(new Object[]{
                resultSet.getString("id"),
                resultSet.getString("name"),
                resultSet.getString("gender"),
                resultSet.getString("email"),
                resultSet.getString("contact"),
                resultSet.getString("address"),
                resultSet.getString("state"),
                resultSet.getString("country"),
                resultSet.getString("uniqueregid"),
                resultSet.getString("imagename")
               
                        
                });
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    private void deleteFile(String filePath){
        File fileToDelete = new File(filePath);
        if(fileToDelete.exists()){
            if(fileToDelete.delete()){
                System.out.println("File Deleted Successfully!");
            }
            else{
                System.out.println("Failed to delete the File!");

            }
        }
        else{
            System.out.println("File doesn't exist");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTable userTable1;
    // End of variables declaration//GEN-END:variables
}
